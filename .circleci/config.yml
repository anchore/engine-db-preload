# CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/configuration-reference/ for more details
#
# The following environment variables must be set in the circleci project UI
#   - $IMAGE_NAME = anchore/engine-db-preload
#
# Define YAML anchors
.filter_semver_tags: &filter_semver_tags
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+(\.[0-9]+)*$/

# Start circleci configuration
version: 2.1
jobs:
  build_test_push_preload_image:
    parameters:
      anchore_version: 
        default: ""
        type: string
    docker:
      - image: circleci/python:3.6
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Setup Anchore Engine, Sync Feeds & Build Image
          command: scripts/build.sh build << parameters.anchore_version >>
      - run:
          name: Save image to workspace
          command: scripts/build.sh save_images << parameters.anchore_version >>
      - run:
          name: Docker Compose & Run Tests
          command: scripts/build.sh test_built_images << parameters.anchore_version >>
      - run:
          name: Push to DockerHub
          command: scripts/build.sh push_all_versions << parameters.anchore_version >>

  build_test_push_slim_preload_image:
    parameters:
      anchore_version: 
        default: ""
        type: string
    docker:
      - image: circleci/python:3.6
    environment:
      IMAGE_REPO: docker.io/anchore/engine-db-preload-slim
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Setup Anchore Engine, Sync Feeds & Build Image
          command: scripts/build.sh -s build << parameters.anchore_version >>
      - run:
          name: Save image to workspace
          command: scripts/build.sh -s save_images << parameters.anchore_version >>
      - run:
          name: Docker Compose & Run Tests
          command: scripts/build.sh -s test_built_images << parameters.anchore_version >>
      - run:
          name: Push to DockerHub
          command: scripts/build.sh -s push_all_versions << parameters.anchore_version >>

workflows:
  default_workflow:
    jobs:
      - build_test_push_slim_preload_image:
          name: build_test_push_slim_preload_image_dev
          anchore_version: dev
          context: dockerhub
      - build_test_push_preload_image:
          name: build_test_push_preload_image_dev
          anchore_version: dev
          context: dockerhub

  tagged_build_all:
    jobs:
      - build_test_push_slim_preload_image:
          name: build_test_push_slim_preload_image_all
          anchore_version: all
          context: dockerhub
          filters: *filter_semver_tags
      - build_test_push_preload_image:
          name: build_test_push_preload_image_all
          anchore_version: all
          context: dockerhub
          filters: *filter_semver_tags

  nightly_build:
    triggers:
      - schedule:
          cron: "0 9 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_test_push_slim_preload_image:
          name: build_test_push_slim_preload_image_v051
          anchore_version: v0.5.1
          context: dockerhub
      - build_test_push_slim_preload_image:
          name: build_test_push_slim_preload_image_v052
          anchore_version: v0.5.2
          context: dockerhub
      - build_test_push_slim_preload_image:
          name: build_test_push_slim_preload_image_v060
          anchore_version: v0.6.0
          context: dockerhub
      - build_test_push_preload_image:
          name: build_test_push_preload_image_v050
          anchore_version: v0.5.0
          context: dockerhub
      - build_test_push_preload_image:
          name: build_test_push_preload_image_v051
          anchore_version: v0.5.1
          context: dockerhub
      - build_test_push_preload_image:
          name: build_test_push_preload_image_v052
          anchore_version: v0.5.2
          context: dockerhub
      - build_test_push_preload_image:
          name: build_test_push_preload_image_v060
          anchore_version: v0.6.0
          context: dockerhub
