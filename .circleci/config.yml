# CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/configuration-reference/ for more details
#
# The following environment variables must be set in the circleci project UI
# - $IMAGE_NAME -> name of image to push to dockerhub
#
# Define YAML anchors
.attach_workspace: &attach_workspace
  attach_workspace:
      at: /home/circleci/workspace/

.install_dependencies: &install_dependencies
  run:
    name: install dependencies
    command: |
      pip install --upgrade pip
      pip install --upgrade docker-compose
      pip install --upgrade anchorecli

# Start circleci configuration
version: 2.1
jobs:
  build_image:
    parameters:
      version:
        type: string
        default: latest
    machine: true
    steps:
      - checkout
      - <<: *install_dependencies
      - run:
          name: setup_anchore_engine
          command: |
            set -x
            sudo apt-get update
            sudo apt-get install -y git
            if [[ << parameters.version >> = 'latest' ]]; then
                export ANCHORE_VERSION=$(git ls-remote --tags --refs --sort="v:refname" git://github.com/anchore/anchore-engine.git | tail -n1 | sed 's/.*\///')
            else
                export ANCHORE_VERSION=<< parameters.version >>
            fi
            mkdir -p /home/circleci/workspace
            echo $ANCHORE_VERSION > /home/circleci/workspace/version.txt
            source scripts/build.sh
            if docker pull ${IMAGE_NAME}:${ANCHORE_VERSION} &> /dev/null; then
                sed -i "s|postgres:9|${IMAGE_NAME}:${ANCHORE_VERSION}|g" docker-compose.yaml
            fi
            setup_anchore_engine $ANCHORE_VERSION
            python scripts/feed_sync_wait.py 240 30
            save_image $ANCHORE_VERSION
      - persist_to_workspace:
          root: /home/circleci/workspace/
          paths:
            - caches/*
            - version.txt

  run_tests:
    machine: true
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *install_dependencies
      - run:
          name: Run built image with docker-compose & aetest.py
          command: |
            set -x
            sudo apt-get update
            sudo apt-get install -y git
            export ANCHORE_VERSION=$(cat /home/circleci/workspace/version.txt)
            source scripts/build.sh
            load_image $ANCHORE_VERSION
            sed -i "s|postgres:9|${IMAGE_NAME}:dev|g" docker-compose.yaml
            setup_anchore_engine $ANCHORE_VERSION
            run_tests $ANCHORE_VERSION

  push_dockerhub:
    machine: true
    steps:
      - checkout
      - <<: *attach_workspace
      - run:
          name: Push dockerhub
          command: |
            set -x
            sudo apt-get update
            sudo apt-get install -y git
            export ANCHORE_VERSION=$(cat /home/circleci/workspace/version.txt)
            source scripts/build.sh
            load_image $ANCHORE_VERSION
            push_dockerhub $ANCHORE_VERSION

workflows:
  default_workflow:
    jobs:
      - build_image:
          name: build_latest
      - run_tests:
          name: tests_latest
          requires:
            - build_latest
      - push_dockerhub:
          name: push_latest
          requires:
            - tests_latest
  
  nightly_build:
    triggers:
      - schedule:
          cron: "0 9 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_image:
          name: build_v0.3.3
          version: v0.3.3
      - run_tests:
          name: tests_v0.3.3
          requires:
            - build_v0.3.3
      - push_dockerhub:
          name: push_v0.3.3
          requires:
            - tests_v0.3.3
      
      - build_image:
          name: build_v0.3.4
          version: v0.3.4
      - run_tests:
          name: tests_v0.3.4
          requires:
            - build_v0.3.4
      - push_dockerhub:
          name: push_v0.3.4
          requires:
            - tests_v0.3.4
      
      - build_image:
          name: build_v0.4.0
          version: v0.4.0
      - run_tests:
          name: tests_v0.4.0
          requires:
            - build_v0.4.0
      - push_dockerhub:
          name: push_v0.4.0
          requires:
            - tests_v0.4.0
